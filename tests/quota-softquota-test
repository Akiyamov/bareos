#!/bin/sh
#
# Run a simple backup of the Bareos build directory using the Sparse option
#   then restore it.
#
TestName="quota-softquota-test"
JobName=BackupClient1
. scripts/functions

scripts/cleanup
scripts/copy-test-confs

rm -f bin/bareos-dir.conf
/bin/cp -f ${rconfigs}/${TestName}/bareos-dir.conf.quota-softquota-test bin/bareos-dir.conf

# create test data
dd if=/dev/zero of=${cwd}/tmp/testdata bs=40000k count=1

echo "${cwd}/tmp/testdata" >${cwd}/tmp/file-list
start_test

# we make the following tests:
#1.: Backup data less than the Soft Quota
#2.: Backup data that gets over the soft quota
#3.: Backup data again, this job notices that we are over quota
#    and sets the grace time.
#4.: Backup data again inside of the grace time
#   then sleep until the grace time is over
#5.: Backup data again outside of the grace time


#@$out /dev/null
cat >${cwd}/tmp/bconcmds <<END_OF_DATA
messages
label storage=File volume=TestVolume001
@$out ${cwd}/tmp/log1.out
run job=$JobName Level=Full yes
wait
messages
@$out ${cwd}/tmp/log2.out
run job=$JobName Level=Full yes
wait
messages
@$out ${cwd}/tmp/log3.out
run job=$JobName Level=Full yes
wait
messages
@$out ${cwd}/tmp/log4.out
run job=$JobName Level=Full yes
wait
messages

delete job jobid=2 yes
delete job jobid=3 yes
@$out ${cwd}/tmp/log5.out
run job=$JobName Level=Full yes
wait
messages

END_OF_DATA

run_bareos
check_for_zombie_jobs storage=File
stop_bareos

# check if job gets a over quota warning
grep "Softquota Exceeded, Grace Period starts now." ${tmp}/log3.out 2>&1 >/dev/null
if test $? -eq 0; then
   print_debug "no 'Softquota Exceeded' warning found."
else
   estat=1
fi
# check if job is successful
grep "^  Termination: *Backup OK" ${tmp}/log3.out 2>&1 >/dev/null
if test $? -eq 0; then
   print_debug "Check for Softquota during grace time: Backup OK."
else
   estat=2
fi

BACKUP_ESTAT=$estat
# wait till the grace time is over...
sleep 15

cat >${cwd}/tmp/bconcmds <<END_OF_DATA
@$out ${cwd}/tmp/log6.out
run job=$JobName Level=Full yes
wait
messages

delete job jobid=1 yes
delete job jobid=4 yes

@$out ${cwd}/tmp/log7.out
run job=$JobName Level=Full yes
wait
messages

@$out ${cwd}/tmp/log8.out
run job=$JobName Level=Full yes
wait
messages
END_OF_DATA

run_bareos
check_for_zombie_jobs storage=File
stop_bareos

estat=$BACKUP_ESTAT
# check if third job is gets the Grace Time expired and Over Quota warning
grep "Fatal error: Soft Quota Exceeded / Grace Time expired" ${tmp}/log6.out 2>&1 >/dev/null
if test $? -eq 0; then
   print_debug "Found Quota Exceeded and Grace Time expired"
else
   estat=3
fi
# check if third job is canceled as expected
grep "^  Termination: .*Backup Error" ${tmp}/log6.out 2>&1 >/dev/null
if test $? -eq 0; then
   print_debug "SoftQuota Exceeded and Grace time expired: Backup Error is OK"
else
   estat=4
fi

end_test
