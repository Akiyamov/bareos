#!/bin/sh
#
# Run a backup of the Bareos build directory on two Volumes
#   then migrate it to another device.
#
# This script uses the virtual disk autochanger
#
TestName="migration-volume-test"
JobName=MigVolBackup
. scripts/functions

scripts/cleanup

#scripts/copy-migration-confs
/bin/cp -f scripts/bareos-dir-migration-sd-sd.conf bin/bareos-dir.conf

# create start script for second sd
/bin/cp -f bin/bareos-ctl-sd bin/bareos-ctl-sd2
#/bin/sed 's/bareos-sd.conf/bareos-sd2.conf/g' < bin/bareos-ctl-sd > bin/bareos-ctl-sd2
/bin/sed "s#BAREOS_CONFIG_DIR=.*#BAREOS_CONFIG_DIR=${cwd}/bin/bareos-sd2.conf#g" < bin/bareos-ctl-sd > bin/bareos-ctl-sd2

/bin/cp -f scripts/bareos-sd-migration-sd-sd1.conf bin/bareos-sd.conf
/bin/cp -f scripts/bareos-sd-migration-sd-sd2.conf bin/bareos-sd2.conf

/bin/cp -f scripts/test-bareos-fd.conf bin/bareos-fd.conf
/bin/cp -f scripts/test-console.conf bin/bconsole.conf
/bin/cp -f scripts/test-console.conf bin/bat.conf

scripts/prepare-disk-changer

echo "${cwd}/build" >${cwd}/tmp/file-list
#cp ${cwd}/bin/bareos-sd.conf ${cwd}/tmp/1
#sed "s%# Maximum File Size%  Maximum File Size%" ${cwd}/tmp/1 >${cwd}/bin/bareos-sd.conf

change_jobname NightlySave $JobName
start_test

#
# Note, we first backup into Pool Default,
#          then Migrate into Pool Full.
#              Pool Default uses Storage=File
#              Pool Full    uses Storage=DiskChanger

# Write out bconsole commands
cat <<END_OF_DATA >${cwd}/tmp/bconcmds
@$out /dev/null
messages
@$out ${cwd}/tmp/log1.out
label storage=File volume=FileVolume001 Pool=Default
label storage=File volume=FileVolume002 Pool=Default
update Volume=FileVolume001 MaxVolBytes=3000000 pool=Default
label storage=DiskChanger volume=ChangerVolume001 slot=1 Pool=Full drive=0
label storage=DiskChanger volume=ChangerVolume002 slot=2 Pool=Full drive=0
@#
run job=$JobName yes
wait
run job=$JobName yes
wait
update volume=FileVolume001 VolStatus=Used
update volume=FileVolume002 VolStatus=Used
@#list volumes
@#list jobs
@# should migrate two jobs
@# setdebug level=11 dir
@echo "Run migrate-volume Job"
@#setdebug level=100 dir
run job=migrate-volume yes
@sleep 5
list jobs
llist jobid=1
llist jobid=2
llist jobid=3
llist jobid=4
llist jobid=5
status storage=DiskChanger
wait
list volumes
list jobs
llist jobid=1
llist jobid=2
llist jobid=3
llist jobid=4
llist jobid=5
sql
select * from JobMedia where JobId=1;

@# Now run a second Migration job, which should do nothing
run job=migrate-volume yes
wait
list jobs
@# ensure we don't pickup old backup by purging volume
@# purge volume=FileVolume001
@# purge volume=FileVolume002
@echo "Now do a restore"
messages
@#
@# now do a restore
@#
@$out ${cwd}/tmp/log2.out
restore where=${cwd}/tmp/bareos-restores select storage=DiskChanger
unmark *
mark *
done
yes
wait
messages
quit
END_OF_DATA

bin/bareos-ctl-sd2 start
run_bareos

check_for_zombie_jobs storage=File
bin/bareos-ctl-sd2 stop
stop_bareos

check_two_logs
check_restore_diff
end_test
