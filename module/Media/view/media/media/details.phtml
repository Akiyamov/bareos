<?php

/**
 *
 * bareos-webui - Bareos Web-Frontend
 *
 * @link      https://github.com/bareos/bareos-webui for the canonical source repository
 * @copyright Copyright (c) 2013-2015 Bareos GmbH & Co. KG (http://www.bareos.org/)
 * @license   GNU Affero General Public License (http://www.gnu.org/licenses/)
 * @author    Frank Bergkemper
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

$title = _('Volume details');
$this->headTitle($title);

?>

<ul class="nav nav-tabs">
   <li><a href="<?php echo $this->url('storage', array('action'=>'index')); ?>"><?php echo $this->translate('Devices'); ?></a></li>
   <li><a href="<?php echo $this->url('pool', array('action'=>'index')); ?>"><?php echo $this->translate('Pools'); ?></a></li>
   <li class="active"><a href="<?php echo $this->url('media', array('action'=>'index')); ?>"><?php echo $this->translate('Volumes'); ?></a></li>
</ul>

<br />

<div class="row">

<div class="col-md-12">
<div class="panel panel-default">

<div class="panel-heading">
<h3 class="panel-title">Volume <?php echo $this->volume; ?></h3>
</div>

<div class="panel-body">

<table class="table table-hover" id="vol">

<thead class="bg-primary">
   <th></th>
   <th><?php echo $this->translate("Name"); ?></th>
   <th><?php echo $this->translate("Storage"); ?></th>
   <th><?php echo $this->translate("Type"); ?></th>
   <th><?php echo $this->translate("Last written"); ?></th>
   <th><?php echo $this->translate("Status"); ?></th>
   <th><?php echo $this->translate("Retention/Expiration"); ?></th>
   <th><?php echo $this->translate("Maximum bytes"); ?></div></th>
   <th><?php echo $this->translate("Current bytes"); ?></div></th>
</thead>

</table>

</div>
</div>
</div>
</div>

<div class="row">

<div class="col-md-12">
<div class="panel panel-default">

<div class="panel-heading">
<h3 class="panel-title"><?php echo $this->translate("Jobs on volume"); ?> <?php echo $this->volume; ?></h3>
</div>

<div class="panel-body">

<table class="table table-hover" id="voljobs">

<thead class="bg-primary">
   <th><?php echo $this->translate("Job ID"); ?></th>
   <th><?php echo $this->translate("Job name"); ?></th>
   <th><?php echo $this->translate("Client"); ?></th>
   <th><?php echo $this->translate("Type"); ?></th>
   <th><?php echo $this->translate("Level"); ?></th>
   <th><?php echo $this->translate("Files"); ?></th>
   <th><?php echo $this->translate("Bytes"); ?></th>
   <th><?php echo $this->translate("Starttime"); ?></th>
   <th><?php echo $this->translate("Endtime"); ?></th>
</thead>

</table>

</div>
</div>
</div>
</div>


<?php
   echo $this->headScript()->prependFile($this->basePath() . '/js/datatables.plugins.js');
   echo $this->headScript()->prependFile($this->basePath() . '/js/datatables.functions.js');
   echo $this->headScript()->prependFile($this->basePath() . '/js/datatables.min.js');
   echo $this->headLink()->prependStylesheet($this->basePath() . '/css/datatables.min.css');
?>

<style>

td.details-control:after {
   font-family: "Glyphicons Halflings";
   content: "\e081";
   cursor: pointer;
}

tr.shown td.details-control:after {
   font-family: "Glyphicons Halflings";
   content: "\e082";
   cursor: pointer;
}

</style>

<script>

function format( d ) {

   var r;

   if(d.recycle == 1) {
      r = '<span class="label label-success">Yes</span>';
   }
   else {
      r = '<span class="label label-danger">No</span>';
   }

   return '<table class="table table-bordered">'+
      '<tr>'+
      '<th><?php echo $this->translate("Label date"); ?></th>'+
      '<td>'+ d.labeldate +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("First written"); ?></th>'+
      '<td>'+ d.firstwritten +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Last written"); ?></th>'+
      '<td>'+ d.lastwritten +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Volume jobs"); ?></th>'+
      '<td>'+ d.voljobs +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Recycle"); ?></th>'+
      '<td>'+ r +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Volume writes"); ?></th>'+
      '<td>'+ d.volwrites +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Slot"); ?></th>'+
      '<td>'+ d.slot +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Media Id"); ?></th>'+
      '<td>'+ d.mediaid +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Volume Blocks"); ?></th>'+
      '<td>'+ d.volblocks +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Volume use duration"); ?></th>'+
      '<td>'+ d.voluseduration +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Volume Pool Id"); ?></th>'+
      '<td>'+ d.poolid +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("In changer"); ?></th>'+
      '<td>'+ d.inchanger +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Volume Files"); ?></th>'+
      '<td>'+ d.volfiles +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Max. volume jobs"); ?></th>'+
      '<td>'+ d.maxvoljobs +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Volume mounts"); ?></th>'+
      '<td>'+ d.volmounts +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Volume capacity bytes"); ?></th>'+
      '<td>'+ d.volcapacitybytes +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Volume errors"); ?></th>'+
      '<td>'+ d.volerrors +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Enabled"); ?></th>'+
      '<td>'+ d.enabled +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Max. volume files"); ?></th>'+
      '<td>'+ d.maxvolfiles +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Endfile"); ?></th>'+
      '<td>'+ d.endfile +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Endblock"); ?></th>'+
      '<td>'+ d.endblock +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Labeltype"); ?></th>'+
      '<td>'+ d.labeltype +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Device Id"); ?></th>'+
      '<td>'+ d.deviceid +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Location Id"); ?></th>'+
      '<td>'+ d.locationid +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Recycle count"); ?></th>'+
      '<td>'+ d.recyclecount +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Initial write"); ?></th>'+
      '<td>'+ d.initialwrite +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Scratch Pool Id"); ?></th>'+
      '<td>'+ d.scratchpoolid +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Recycle pool Id"); ?></th>'+
      '<td>'+ d.recyclepoolid +'</td>'+
      '</tr>'+
      '<tr>'+
      '<th><?php echo $this->translate("Comment"); ?></th>'+
      '<td>'+ d.comment +'</td>'+
      '</tr>'+
      '</table>';
}

$(document).ready(function() {

   setDtTextDomain('<?php echo $this->basePath() . '/js/locale'; ?>');
   setDtLocale('<?php echo $_SESSION['bareos']['locale']; ?>');

   var vol = $('#vol').DataTable( {
      "dom": "l<'row'<'col-sm-9'B><'col-sm-3'f>>rtip",
      "ajax": {
         "url": "<?php echo $this->url('media', array('action' => 'getData'), null) . '?data=details&volume=' . $this->volume; ?>",
         "dataSrc": ""
      },
      "language": {
         "url": "<?php echo $this->basePath() . '/js/dataTables/language/'; ?>" + getLocale('<?php echo $_SESSION['bareos']['locale']; ?>')
      },
      "paging": false,
      "pagingType": "full_numbers",
      "stateSave": true,
      "ordering": true,
      "order": [[4, "desc"]],
      "searching": false,
      "info": false,
      "columns": [
         { "data": null, "orderable": false, "defaultContent": '', "className": 'details-control' },
         { "data": "volumename" },
         { "data": "storageid" },
         { "data": "mediatype" },
         { "data": "lastwritten" },
         { "data": "volstatus" },
         { "data": null },
         { "type": "file-size", "data": "maxvolbytes" },
         { "type": "file-size", "data": "volbytes" },
         { "data": "lastwritten" }
      ],
      "columnDefs": [
         {
            "targets": 1,
            "render": function(data, type, full, meta) {
               return data;
            }
         },
         {
            "targets": 4,
            "orderData": 9,
            "render": function(data, type, full, meta) {
               return formatLastWritten(data);
            }
         },
         {
            "targets": 6,
            "render": function(data, type, full, meta) {
               return formatExpiration(data.volstatus, data.lastwritten, data.volretention);
            }
         },
         {
            "targets": 7,
            "render": function(data, type, full, meta) {
               return formatBytes(data);
            }
         },
         {
            "targets": 8,
            "render": function(data, type, full, meta) {
               return formatBytes(data);
            }
         },
         {
            "targets": 9,
            "visible": false,
            "searchable": false
         }
      ],
      "buttons": [
      ],

   } );

   $('#vol tbody').on('mouseover', '#lastwritten', function () {
      $('[data-toggle="tooltip"]').tooltip();
   } );

   $('#vol tbody').on('click', 'td.details-control', function () {
      var tr = $(this).closest('tr');
      var row = vol.row( tr );
      if ( row.child.isShown() ) {
         // This row is already open - close it
         row.child.hide();
         tr.removeClass('shown');
      }
      else {
         // Open this row
         row.child( format(row.data()) ).show();
         tr.addClass('shown');
      }
   } );

   var voljobs = $('#voljobs').DataTable( {
      "ajax": {
         "url": "<?php echo $this->url('media', array('action' => 'getData'), null) . '?data=jobs&volume=' . $this->volume; ?>",
         "dataSrc": ""
      },
      "language": {
         "url": "<?php echo $this->basePath() . '/js/dataTables/language/'; ?>" + getLocale('<?php echo $_SESSION['bareos']['locale']; ?>')
      },
      "paging": true,
      "ordering": true,
      "info": true,
      "pagingType": "full_numbers",
      "stateSave": true,
      "ordering": true,
      "order": [[0, 'desc']],
      "searching": true,
      "columns": [
         { "data": "jobid", "defaultContent": "" },
         { "data": "name", "defaultContent": "" },
         { "data": "client", "defaultContent": "" },
         { "data": "type", "defaultContent": "" },
         { "data": "level", "defaultContent": "" },
         { "data": "jobfiles", "defaultContent": "" },
         { "data": "jobbytes", "type": "file-size", "defaultContent": "0.00 B" },
         { "data": "starttime", "defaultContent": "" },
         { "data": "endtime", "defaultContent": "" },
         { "data": "jobbytes", "defaultContent": "0", "visible": false}
      ],
      "columnDefs": [
         {
            "targets": 0,
            "render": function(data, type, full, meta) {
               return '<a href="<?php echo $this->basePath() . '/job/details/'; ?>'+data+'">'+data+'</a>';
            }
         },
         {
            "targets": 2,
            "render": function(data, type, full, meta) {
               return '<a href="<?php echo $this->basePath() . '/client/details/'; ?>'+data+'">'+data+'</a>';
            }
         },
         {
            "targets": 3,
            "render": function(data, type, full, meta) {
               return formatJobType(data);
            }
         },
         {
            "targets": 4,
            "render": function(data, type, full, meta) {
               return formatJobLevel(data);
            }
         },
         {
            "targets": 6,
            "orderData": 9,
            "render": function(data, type, full, meta) {
               return formatBytes(data);
            }
         },
      ]
   });

} );

</script>
