<?php

/**
 *
 * bareos-webui - Bareos Web-Frontend
 *
 * @link      https://github.com/bareos/bareos for the canonical source repository
 * @copyright Copyright (c) 2013-2020 Bareos GmbH & Co. KG (http://www.bareos.org/)
 * @license   GNU Affero General Public License (http://www.gnu.org/licenses/)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

$title = 'Jobs';
$this->headTitle($title);

?>

<ul class="nav nav-tabs">
   <li class="active"><a href="<?php echo $this->url('job', array('action'=>'index')); ?>"><?php echo $this->translate('Show'); ?></a></li>
   <li><a href="<?php echo $this->url('job', array('action'=>'actions')); ?>"><?php echo $this->translate('Actions'); ?></a></li>
   <li><a href="<?php echo $this->url('job', array('action'=>'run')); ?>"><?php echo $this->translate('Run'); ?></a></li>
</ul>

<br />

<?php if($this->acl_alert) : echo $this->ACLAlert($this->invalid_commands); elseif(!$this->acl_alert) : ?>

<div class="row">

<div class="col-md-12">

<div class="panel panel-default">

<div class="panel-heading">
<h3 class="panel-title"><?php echo $this->translate('Job list'); ?></h3>
</div>

<div class="panel-body">

<table class="table table-no-bordered table-hover" id="jobtable">
<table
   class="table table-no-bordered table-hover"
   id="jobtable"
   data-filter-control="true">

<thead class="bg-primary">
   <th
      data-field="jobid"
      data-width="200"
      data-filter-control="input"
      data-filter-control-placeholder="Job ID"><?php echo $this->translate("Job ID"); ?>
   </th>
   <th
      data-field="name"
      data-filter-control="input"
      data-filter-control-placeholder="Job name"><?php echo $this->translate("Job name"); ?>
   </th>
   <th
      data-field="client"
      data-filter-control="input"
      data-filter-control-placeholder="Client"><?php echo $this->translate("Client"); ?>
   </th>
   <th
      data-field="type"
      data-width="50"
      data-filter-control="input"
      data-filter-control-placeholder="Type"><?php echo $this->translate("Type"); ?>
   </th>
   <th
      data-field="level"
      data-width="50"
      data-filter-control="input"
      data-filter-control-placeholder="Level"><?php echo $this->translate("Level"); ?>
   </th>
   <th
      data-field="starttime"
      data-width="200"
      data-filter-control="input"
      data-filter-control-placeholder="Start"><?php echo $this->translate("Start"); ?>
   </th>
   <th
      data-field="endtime" data-width="200"
      data-filter-control="input"
      data-filter-control-placeholder="End"><?php echo $this->translate("End"); ?>
   </th>
   <th
      data-field="jobfiles"
      data-width="50"
      data-filter-control="input"
      data-filter-control-placeholder="Files"><?php echo $this->translate("Files"); ?>
   </th>
   <th
      data-field="jobbytes"
      data-width="50"
      data-filter-control="input"
      data-filter-control-placeholder="Bytes"><?php echo $this->translate("Bytes"); ?>
   </th>
   <th
      data-field="joberrors"
      data-width="50"
      data-filter-control="input"
      data-filter-control-placeholder="Errors"><?php echo $this->translate("Errors"); ?>
   </th>
   <th
      data-field="jobstatus"
      data-width="200"
      data-filter-control="input"
      data-filter-control-placeholder="Status"><?php echo $this->translate("Status"); ?>
   </th>
   <th
      data-width="100" ><?php echo $this->translate("Actions"); ?>
   </th>
</thead>

</table>

</div>
</div>
</div>
</div>

<!-- modal-001 start -->
<div id="modal-001" class="modal fade modal-001" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
  <div class="modal-dialog modal-md">
    <div class="modal-content">
   <div class="modal-header">
   <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
   <h4 class="modal-title" id="myModalLabel"><?php echo $this->translate("Failed to retrieve data from Bareos director"); ?></h4>
      </div>
      <div class="modal-body">
   <p><?php echo $this->translate("Please try to reduce the amount of data to display, e.g. reduce time period."); ?></p>
   <p><?php echo $this->translate("Error message received from director:"); ?></p>
   <p class="text-danger"><?php echo $this->translate("Failed to send result as json. Maybe the result message is too long?"); ?></p>
      </div>
      <div class="modal-footer">
         <button type="button" class="btn btn-default" data-dismiss="modal"><?php echo $this->translate("Close"); ?></button>
      </div>
    </div>
  </div>
</div>
<!-- modal-001 end -->

<!-- modal-002 start -->
<div id="modal-002" class="modal fade modal-002" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
  <div class="modal-dialog modal-md">
    <div class="modal-content">
      <div class="modal-header">
         <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
         </button>
         <h4 class="modal-title" id="myModalLabel">Director message</h4>
      </div>
      <div class="modal-body">
         <p><?php echo str_replace(array("\n","\r"), "<br />", $this->result); ?></p>
      </div>
      <div class="modal-footer">
         <button type="button" class="btn btn-default" data-dismiss="modal"><?php echo $this->translate("Close"); ?></button>
      </div>
    </div>
  </div>
</div>
<!-- modal-002 end -->

<?php
   echo $this->headScript()->prependFile($this->basePath() . '/js/custom-functions.js');
   echo $this->headLink()->prependStylesheet($this->basePath() . '/css/bootstrap-table-filter-control.min.css');
   echo $this->headLink()->prependStylesheet($this->basePath() . '/css/bootstrap-table.min.css');
   echo $this->headScript()->prependFile($this->basePath() . '/js/bootstrap-table-filter-control.min.js');
   echo $this->headScript()->prependFile($this->basePath() . '/js/bootstrap-table-locale-all.min.js');
   echo $this->headScript()->prependFile($this->basePath() . '/js/bootstrap-table-cookie.min.js');
   echo $this->headScript()->prependFile($this->basePath() . '/js/bootstrap-table.min.js');
?>

<script>

   var jobtable = null;
   var displayRange = <?php echo $this->period; ?>;

   // Table columns filter
   var jobid = null;
   var jobname = iJS._('<?php if($this->jobname !== "all") echo $this->jobname; ?>');
   var client = null;
   var jobtype = null;
   var joblevel = null;
   var jobstarttime = null;
   var jobendtime = null;
   var jobfiles = null;
   var jobbytes = null;
   var joberrors = null;
   var jobstatus = iJS._('<?php if($this->status !== "all") echo $this->status; ?>');

   function resetSearchFilters() {
      $('#jobtable').bootstrapTable('clearFilterControl');
      jobid = null;
      jobname = null;
      client = null;
      jobtype = null;
      joblevel = null;
      jobstarttime = null;
      jobendtime = null;
      jobfiles = null;
      jobbytes = null;
      joberrors = null;
      jobstatus = null;
   }

   function refreshTableData() {
      $('#jobtable').bootstrapTable('refreshOptions', {
         url: '<?php echo $this->url('job', array('action' => 'getData'), null) . '?data=jobs&period='; ?>' + displayRange,
      });

      $('.bootstrap-table-filter-control-jobid').val(jobid);
      $('.bootstrap-table-filter-control-name').val(jobname);
      $('.bootstrap-table-filter-control-client').val(client);
      $('.bootstrap-table-filter-control-type').val(jobtype);
      $('.bootstrap-table-filter-control-level').val(joblevel);
      $('.bootstrap-table-filter-control-starttime').val(jobstarttime);
      $('.bootstrap-table-filter-control-endtime').val(jobendtime);
      $('.bootstrap-table-filter-control-jobfiles').val(jobfiles);
      $('.bootstrap-table-filter-control-jobbytes').val(jobbytes);
      $('.bootstrap-table-filter-control-joberrors').val(joberrors);
      $('.bootstrap-table-filter-control-jobstatus').val(jobstatus);
   }

   function detailFormatter(index, row) {
      var html = [];
      html.push('<div class="container-fluid">');
      html.push('<table class="table table-bordered">');
      html.push('<tr>');
      html.push('<th><?php echo $this->translate("Fileset"); ?></th>');
      html.push('<td><a href="<?php echo $this->basePath() . '/fileset/details/'; ?>' + row.filesetid + '">' + row.fileset +'</a></td>');
      html.push('</tr>');
      html.push('<tr>');
      html.push('<th><?php echo $this->translate("Pool"); ?></th>');
      html.push('<td><a href="<?php echo $this->basePath() . '/pool/details/'; ?>' + row.poolname + '">' + row.poolname + '</a></td>');
      html.push('</tr>');
      html.push('<tr>');
      html.push('<th><?php echo $this->translate("Scheduled"); ?></th>');
      html.push('<td>' + row.schedtime + '</td>');
      html.push('</tr>');
      html.push('</table>');
      html.push('</div>');
      return html.join('');
   }

   function getJobs() {
   function jobActionButtonsFormatter(value, row, index) {

      let jobDetailsButton = '<a class="btn btn-default btn-xs" data-toggle="tooltip" data-placement="top" href="<?php echo $this->basePath(); ?>/job/details/'+row.jobid+'" title="<?php echo $this->translate("View Job Details"); ?>" id="btn-0"><span class="glyphicon glyphicon-search"></span></a>';
      let jobRerunButton = '<a class="btn btn-default btn-xs" data-toggle="tooltip" data-placement="top" href="<?php echo $this->basePath() . '/job/index?action=rerun&jobid='; ?>'+row.jobid+'" title="<?php echo $this->translate('Rerun'); ?>" id="btn-1"><span class="glyphicon glyphicon-repeat"></span></a>';
      let jobRestoreButton = '<a class="btn btn-default btn-xs" data-toggle="tooltip" data-placement="top" href="<?php echo $this->basePath(); ?>/restore/?mergefilesets=1&mergejobs=1&client='+row.client+'&jobid='+row.jobid+'" title="<?php echo $this->translate("Restore"); ?>" id="btn-1"><span class="glyphicon glyphicon-import"></span></a>';
      let jobCancelButton = '<a class="btn btn-default btn-xs" data-toggle="tooltip" data-placement="top" href="<?php echo $this->basePath() . '/job/cancel/'; ?>'+row.jobid+'" title="<?php echo $this->translate("Cancel"); ?>" id="btn-1"><span class="glyphicon glyphicon-trash"></span></a>';

      switch(row.jobstatus) {
         case 'T':
         case 'W':
            switch(row.type) {
               case 'B':
                  return jobDetailsButton + '&nbsp;' + jobRerunButton + '&nbsp;' + jobRestoreButton;
               case 'C':
                  return jobDetailsButton + '&nbsp;' + jobRestoreButton;
            }
         case 'E':
         case 'e':
         case 'f':
         case 'A':
            switch(row.type) {
               case 'B':
                  return ijobDetailsButton + '&nbsp;' + jobRerunButton;
            }
         case 'F':
         case 'S':
         case 'm':
         case 'M':
         case 's':
         case 'j':
         case 'c':
         case 'd':
         case 't':
         case 'p':
         case 'q':
         case 'C':
         case 'R':
         case 'l':
            switch(row.type) {
               case 'R':
                  switch(row.jobstatus) {
                     case 'R':
                     case 'l':
                        return jobDetailsButton + '&nbsp;' + jobCancelButton;
                     default:
                        return jobDetailsButton;
                  }
               case 'B':
               case 'C':
                  return jobDetailsButton + '&nbsp;' + jobCancelButton;
               default:
                  return jobDetailsButton;
            }
         default:
            return '';
      }

   }
      jobtable = $('#jobtable').bootstrapTable({
         locale: '<?php echo str_replace('_','-', $_SESSION['bareos']['locale']); ?>',
         cookie: <?php echo $_SESSION['bareos']['dt_statesave']; ?>,
         cookieIdTable: 'dashboard_table_jobs_last_status',
         url: '<?php echo $this->url('job', array('action' => 'getData'), null) . '?data=jobs&period='; ?>' + displayRange,
         method: 'get',
         dataType: 'json',
         pagination : true,
         sidePagination: 'client',
         pageList: [ <?php echo $_SESSION['bareos']['dt_lengthmenu']; ?> ],
         pageSize: <?php echo $_SESSION['bareos']['dt_pagelength']; ?>,
         search: false,
         showPaginationSwitch: true,
         showColumns: true,
         showRefresh: true,
         sortName: 'jobid',
         sortOrder: 'desc',
         detailView: true,
         detailFormatter: 'detailFormatter',
         columns: [
            {
               field: 'jobid',
               sortable: true,
               formatter: function(value) {
                  return '<a href="<?php echo $this->basePath() . '/job/details/'; ?>'+value+'" title="<?php echo $this->translate("View Job Details"); ?>">'+value+'</a>';
               }
            },
            {
               field: 'name',
               sortable: true,
               formatter: function(value) {
                  return '<a href="<?php echo $this->basePath() . '/job/index?jobname='; ?>'+value+'">'+value+'</a>';
               }
            },
            {
               field: 'client',
               sortable: true,
               formatter: function(value) {
                  return '<a href="<?php echo $this->basePath() . '/client/details/'; ?>'+value+'">'+value+'</a>';
               }
            },
            {
               field: 'type',
               sortable: true,
               formatter: function(value) {
                  return formatJobType(value);
               }
            },
            {
               field: 'level',
               sortable: true,
               formatter: function(value) {
                  return formatJobLevel(value);
               }
            },
            {
               field: 'starttime',
               sortable: true
            },
            {
               field: 'endtime',
               sortable: true
            },
            {
               field: 'jobfiles',
               sortable: true,
            },
            {
               field: 'jobbytes',
               sortable: true,
               formatter: function(value) {
                  return formatBytes(value);
               }
            },
            {
               field: 'joberrors',
               sortable: true,
            },
            {
               field: 'jobstatus',
               sortable: true,
               formatter: function(value) {
                  return formatJobStatus(value);
               }
            },
            {
               field: 'action',
               formatter: function(value, row, index) {
                  return jobActionButtonsFormatter(value, row, index);
               }
            }
         ]
      });
   }

   function updateQueryParams(k, v) {
      var p = [];
      var params = [];

      p['jobname'] = '<?php echo $this->jobname; ?>';
      p['status'] = '<?php echo $this->status; ?>';
      p['period'] = '<?php echo $this->period; ?>';

      if(k == 'status' && v == 'running') {
         p['period'] = 'all';
      }
      else if(k == 'status' && v == 'waiting') {
         p['period'] = 'all';
      }

      p[k] = v;

      for(key in p) {
          params.push(key + "=" + p[key]);
      }

      return params.join('&');
   }

   $(document).ready(function() {
      setDtTextDomain('<?php echo $this->basePath() . '/js/locale'; ?>');
      setDtLocale('<?php echo $_SESSION['bareos']['locale']; ?>');

      var result = '<?php echo str_replace(array("\n","\r"), "", $this->result); ?>';

      if(result.length > 0) {
         $("#modal-002").modal();
      }

      getJobs();

      // Set table filter input field values
      $('.bootstrap-table-filter-control-name').val(jobname);
      $('.bootstrap-table-filter-control-jobstatus').val(iJS._(jobstatus));

      $('#jobtable').on('load-error.bs.table', function(status, res) {
         $("#modal-001").modal();
      });

      $('#btn-clear-search-filters').on('click', resetSearchFilters);
   });

   // Remember table filter input field values
   $(document).on('input', '.bootstrap-table-filter-control-jobid', function() {
      jobid = $(this).val();
   });

   $(document).on('input', '.bootstrap-table-filter-control-name', function() {
      jobname = $(this).val();
   });

   $(document).on('input', '.bootstrap-table-filter-control-client', function() {
      client = $(this).val();
   });

   $(document).on('input', '.bootstrap-table-filter-control-type', function() {
      jobtype = $(this).val();
   });

   $(document).on('input', '.bootstrap-table-filter-control-level', function() {
      joblevel = $(this).val();
   });

   $(document).on('input', '.bootstrap-table-filter-control-starttime', function() {
      jobstarttime = $(this).val();
   });

   $(document).on('input', '.bootstrap-table-filter-control-endtime', function() {
      jobendtime = $(this).val();
   });

   $(document).on('input', '.bootstrap-table-filter-control-jobfiles', function() {
      jobfiles = $(this).val();
   });

   $(document).on('input', '.bootstrap-table-filter-control-jobbytes', function() {
      jobbytes = $(this).val();
   });

   $(document).on('input', '.bootstrap-table-filter-control-joberrors', function() {
      joberrors = $(this).val();
   });

   $(document).on('input', '.bootstrap-table-filter-control-jobstatus', function() {
      jobstatus = $(this).val();
   });
   });

</script>

<?php endif; ?>
