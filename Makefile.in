#
# $Id$
#
@MCOMMON@

srcdir =	@srcdir@
VPATH = 	@srcdir@
.PATH:		@srcdir@
BACULASRC =	@bacula@

basedir = ..
topdir = ..
thisdir = docs

#
# Distribution variables
#

de_dirs = manuals/de/console manuals/de/developers manuals/de/main \
  manuals/de/misc manuals/de/problems manuals/de/utility


en_dirs = manuals/en/console manuals/en/developers manuals/en/main \
  manuals/en/misc manuals/en/problems manuals/en/utility

es_dirs = manuals/es/console manuals/es/developers manuals/es/main \
  manuals/es/misc manuals/es/problems manuals/es/utility

fr_dirs = manuals/fr/console manuals/fr/developers manuals/fr/main \
  manuals/fr/misc manuals/fr/problems manuals/fr/utility

all_dirs = ${de_dirs} ${en_dirs} ${es_dirs} ${fr_dirs}

DIST	  = Makefile.in

#-------------------------------------------------------------------------

en: all

all:
	@for I in ${en_dirs}; \
	  do (cd $$I; echo "==>Entering directory `pwd`"; \
	      $(MAKE) $@ || (echo ""; echo ""; echo "  ====== Error in `pwd` ======"; \
			    echo ""; echo ""; exit 1;)); \
	done
	@echo "All manuals built ..."

bacula-web:
	(cd bacula-web; make)

fr:	french

french:
	@for I in ${fr_dirs}; \
	  do (cd $$I; echo "==>Entering directory `pwd`"; \
	      $(MAKE) all || (echo ""; echo ""; echo "	====== Error in `pwd` ======"; \
			    echo ""; echo ""; exit 1;)); \
	done

de:	german

german:
	@for I in ${de_dirs}; \
	  do (cd $$I; echo "==>Entering directory `pwd`"; \
	      $(MAKE) all || (echo ""; echo ""; echo "	====== Error in `pwd` ======"; \
			    echo ""; echo ""; exit 1;)); \
	done

es:	spanish

spanish:
	@for I in ${es_dirs}; \
	  do (cd $$I; echo "==>Entering directory `pwd`"; \
	      $(MAKE) all || (echo ""; echo ""; echo "	====== Error in `pwd` ======"; \
			    echo ""; echo ""; exit 1;)); \
	done


configure: autoconf/configure.in autoconf/aclocal.m4 autoconf/acconfig.h
	cd $(srcdir);
	${RMF} -f config.cache config.log config.out config.status src/config.h
	autoconf --prepend-include=$(srcdir)/autoconf \
	    autoconf/configure.in > configure
	chmod 755 configure

Makefile: Makefile.in
	cd $(topdir) \
	    && CONFIG_FILES=$(thisdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

Makefiles:
	$(SHELL) config.status


SEDREPLACE = -e 's%@BACULA_VERSION@%$(VERSION)%g;'\
	     -e 's%@BACULA_LSMDATE@%$(LSMDATE)%g;'\
	     -e 's%@BACULA_DATE@%$(DATE)%g;'\
	     -e 's%@BACULA_MAINTEMAIL@%$(MAINTEMAIL)%g;'\
	     -e 's%@BACULA_MAINT@%$(MAINT)%g;'\
	     -e 's%@BACULA_WEBPAGE@%$(WEBPAGE)%g;'\
	     -e 's%@BACULA_WEBMAINTEMAIL@%$(WEBMAINTEMAIL)%g;'\
	     -e 's%@BACULA_WEBMAINT@%$(WEBMAINT)%g;'\
	     -e 's%@BACULA_FTPSITENAME@%$(FTPSITENAME)%g;'\
	     -e 's%@BACULA_FTPSITEDIR@%$(FTPSITEDIR)%g;'


$(basedir)/$(VERNAME).lsm: LSM.in $(srcdir)/../autoconf/Make.common.in $(srcdir)/../src/version.h
	$(SED) $(SEDREPLACE) < $(srcdir)/LSM.in > $@

clean:
	$(RMF) *~ 1 2 3 bacula-doc*.tar.gz
	(cd bacula-web; make clean)
	find . -type l -exec rm {} \;
	@for I in ${all_dirs}; \
	  do (cd $$I; echo "==>Entering directory `pwd`"; ${MAKE} $@ || exit 1); done


realclean: clean

distclean: clean
	$(RMF) Makefile
	$(RMF) -r CVS html-manual/CVS home-page/CVS techlogs/CVS
	$(RMF) -rf autom4te.cache bacula-doc-* config.log config.out
	$(RMF) -f config.status kernsconfig
	(cd bacula-web; make distclean)
	@for I in ${all_dirs}; \
	  do (cd $$I; echo "==>Entering directory `pwd`"; ${MAKE} $@ || exit 1); done


devclean:
	$(RMF) Makefile

depend:

install:
#	$(INSTALL_DATA) bacula.1 $(DESTDIR)$(mandir)/$(manprefix)bacula.$(manext)

uninstall:
#	-cd $(mandir); $(RMF) $(manprefix)bacula.$(manext)
